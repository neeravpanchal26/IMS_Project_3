{
  "version": 3,
  "file": "zxing-ngx-scanner.umd.js",
  "sources": [
    "ng://@zxing/ngx-scanner/out/app/modules/zxing-scanner/zxing-scanner.module.ts",
    "ng://@zxing/ngx-scanner/out/app/modules/zxing-scanner/zxing-scanner.component.ts",
    "ng://@zxing/ngx-scanner/out/app/modules/zxing-scanner/browser-qr-code-reader.ts",
    "ng://@zxing/ngx-scanner/out/app/modules/zxing-scanner/browser-multi-format-reader.ts",
    "ng://@zxing/ngx-scanner/out/app/modules/zxing-scanner/browser-code-reader.ts",
    "ng://@zxing/ngx-scanner/node_modules/tslib/tslib.es6.js"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { ZXingScannerComponent } from './zxing-scanner.component';\r\n\r\nexport type ZXingScannerComponent = ZXingScannerComponent;\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule\r\n    ],\r\n    declarations: [ZXingScannerComponent],\r\n    exports: [ZXingScannerComponent],\r\n})\r\nexport class ZXingScannerModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: ZXingScannerModule\r\n        };\r\n    }\r\n}\r\n",
    "import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    Output,\r\n    SimpleChanges,\r\n    ViewChild\r\n} from '@angular/core';\r\n\r\nimport { Result, DecodeHintType, BarcodeFormat } from '@zxing/library';\r\n\r\nimport { BrowserMultiFormatReader } from './browser-multi-format-reader';\r\nimport { BrowserQRCodeReader } from './browser-qr-code-reader';\r\nimport { BrowserCodeReader } from './browser-code-reader';\r\n\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'zxing-scanner',\r\n    template: `<video #preview [style.object-fit]=\"previewFitMode\">\r\n    <p>\r\n        Your browser does not support this feature, please try to upgrade it.\r\n    </p>\r\n    <p>\r\n        Seu navegador não suporta este recurso, por favor tente atualizá-lo.\r\n    </p>\r\n</video>\r\n`,\r\n    styles: [`:host{display:block}video{width:100%;height:auto;-o-object-fit:contain;object-fit:contain}`],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ZXingScannerComponent implements AfterViewInit, OnDestroy, OnChanges {\r\n\r\n    /**\r\n     * The ZXing code reader.\r\n     */\r\n    private codeReader: BrowserCodeReader;\r\n\r\n    /**\r\n     * Has `navigator` access.\r\n     */\r\n    private hasNavigator: boolean;\r\n\r\n\r\n    /**\r\n     * Says if some native API is supported.\r\n     */\r\n    private isMediaDevicesSuported: boolean;\r\n\r\n    /**\r\n     * Says if some native API is supported.\r\n     */\r\n    private isEnumerateDevicesSuported: boolean;\r\n\r\n    /**\r\n     * List of enable video-input devices.\r\n     */\r\n    private videoInputDevices: MediaDeviceInfo[];\r\n    /**\r\n     * The current device used to scan things.\r\n     */\r\n    private videoInputDevice: MediaDeviceInfo;\r\n\r\n    /**\r\n     * If the user-agent allowed the use of the camera or not.\r\n     */\r\n    private hasPermission: boolean;\r\n\r\n    /**\r\n     * If any media device were found.\r\n     */\r\n    private set _hasDevices(hasDevice: boolean) {\r\n        this.hasDevices.next(hasDevice);\r\n    }\r\n\r\n    /**\r\n     * Reference to the preview element, should be the `video` tag.\r\n     */\r\n    @ViewChild('preview')\r\n    previewElemRef: ElementRef;\r\n\r\n    /**\r\n     * Barcode formats to scan\r\n     */\r\n    private _formats: BarcodeFormat[] = [BarcodeFormat.QR_CODE];\r\n\r\n    get formats() {\r\n        return this._formats;\r\n    }\r\n\r\n    @Input()\r\n    set formats(formatsInput: BarcodeFormat[]) {\r\n        // formats may be set from html template as BarcodeFormat or string array\r\n        const formats = <(string | BarcodeFormat)[]>formatsInput;\r\n        this._formats = formats.map(f => (typeof f === 'string') ? BarcodeFormat[f.trim()] : f);\r\n    }\r\n\r\n    /**\r\n     * Allow start scan or not.\r\n     */\r\n    @Input()\r\n    scannerEnabled = true;\r\n\r\n    /**\r\n     * The device that should be used to scan things.\r\n     */\r\n    @Input()\r\n    device: MediaDeviceInfo;\r\n\r\n    /**\r\n     * Enable or disable autofocus of the camera (might have an impact on performance)\r\n     */\r\n    @Input()\r\n    autofocusEnabled = true;\r\n\r\n    /**\r\n     * How the preview element shoud be fit inside the :host container.\r\n     */\r\n    @Input()\r\n    previewFitMode: 'fill' | 'contain' | 'cover' | 'scale-down' | 'none' = 'cover';\r\n\r\n    /**\r\n     * Allow start scan or not.\r\n     */\r\n    @Input()\r\n    set torch(on: boolean) {\r\n        this.codeReader.setTorch(on);\r\n    }\r\n\r\n    /**\r\n     * Emitts events when the torch compatibility is changed.\r\n     */\r\n    @Output()\r\n    torchCompatible = new EventEmitter<boolean>();\r\n\r\n    /**\r\n     * Emitts events when a scan is successful performed, will inject the string value of the QR-code to the callback.\r\n     */\r\n    @Output()\r\n    scanSuccess = new EventEmitter<string>();\r\n\r\n    /**\r\n     * Emitts events when a scan fails without errors, usefull to know how much scan tries where made.\r\n     */\r\n    @Output()\r\n    scanFailure = new EventEmitter<void>();\r\n\r\n    /**\r\n     * Emitts events when a scan throws some error, will inject the error to the callback.\r\n     */\r\n    @Output()\r\n    scanError = new EventEmitter<Error>();\r\n\r\n    /**\r\n     * Emitts events when a scan is performed, will inject the Result value of the QR-code scan (if available) to the callback.\r\n     */\r\n    @Output()\r\n    scanComplete = new EventEmitter<Result>();\r\n\r\n    /**\r\n     * Emitts events when no cameras are found, will inject an exception (if available) to the callback.\r\n     */\r\n    @Output()\r\n    camerasFound = new EventEmitter<MediaDeviceInfo[]>();\r\n\r\n    /**\r\n     * Emitts events when no cameras are found, will inject an exception (if available) to the callback.\r\n     */\r\n    @Output()\r\n    camerasNotFound = new EventEmitter<any>();\r\n\r\n    /**\r\n     * Emitts events when the users answers for permission.\r\n     */\r\n    @Output()\r\n    permissionResponse = new EventEmitter<boolean>();\r\n\r\n    /**\r\n     * Emitts events when has devices status is update.\r\n     */\r\n    @Output()\r\n    hasDevices = new EventEmitter<boolean>();\r\n\r\n    /**\r\n     * Constructor to build the object and do some DI.\r\n     */\r\n    constructor() {\r\n        this.codeReader = new BrowserQRCodeReader();\r\n        this.hasNavigator = typeof navigator !== 'undefined';\r\n        this.isMediaDevicesSuported = this.hasNavigator && !!navigator.mediaDevices;\r\n        this.isEnumerateDevicesSuported = !!(this.isMediaDevicesSuported && navigator.mediaDevices.enumerateDevices);\r\n    }\r\n\r\n    /**\r\n     * Manages the bindinded property changes.\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n\r\n        if (changes.scannerEnabled) {\r\n            if (!this.scannerEnabled) {\r\n                this.resetScan();\r\n            } else if (this.videoInputDevice) {\r\n                this.scan(this.videoInputDevice.deviceId);\r\n            }\r\n        }\r\n\r\n        if (changes.device) {\r\n            if (this.device) {\r\n                this.changeDevice(this.device);\r\n            } else {\r\n                console.warn('zxing-scanner', 'device', 'Unselected device.');\r\n                this.resetScan();\r\n            }\r\n        }\r\n\r\n        if (changes.formats !== undefined) {\r\n            this.setFormats(this.formats);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Executed after the view initialization.\r\n     */\r\n    async ngAfterViewInit(): Promise<void> {\r\n\r\n        // Chrome 63 fix\r\n        if (!this.previewElemRef) {\r\n            console.warn('zxing-scanner', 'Preview element not found!');\r\n            return;\r\n        }\r\n\r\n        // iOS 11 Fix\r\n        this.previewElemRef.nativeElement.setAttribute('autoplay', false);\r\n        this.previewElemRef.nativeElement.setAttribute('muted', true);\r\n        this.previewElemRef.nativeElement.setAttribute('playsinline', true);\r\n        this.previewElemRef.nativeElement.setAttribute('autofocus', this.autofocusEnabled);\r\n\r\n        // Asks for permission before enumerating devices so it can get all the device's info\r\n        const hasPermission = await this.askForPermission();\r\n\r\n        // gets and enumerates all video devices\r\n        this.enumarateVideoDevices().then((videoInputDevices: MediaDeviceInfo[]) => {\r\n\r\n            if (videoInputDevices && videoInputDevices.length > 0) {\r\n                this._hasDevices = true;\r\n                this.camerasFound.next(videoInputDevices);\r\n            } else {\r\n                this._hasDevices = false;\r\n                this.camerasNotFound.next();\r\n            }\r\n\r\n        });\r\n\r\n        // There's nothin' to do anymore if we don't have permissions.\r\n        if (hasPermission !== true) {\r\n            return;\r\n        }\r\n\r\n        this.startScan(this.videoInputDevice);\r\n\r\n        this.codeReader.torchAvailable.subscribe((value: boolean) => {\r\n            this.torchCompatible.emit(value);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Executes some actions before destroy the component.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.resetScan();\r\n    }\r\n\r\n    /**\r\n     * Changes the supported code formats.\r\n     * @param formats The formats to support.\r\n     */\r\n    setFormats(formats: BarcodeFormat[]): void {\r\n\r\n        this.formats = formats;\r\n\r\n        const hints = new Map<DecodeHintType, any>();\r\n        hints.set(DecodeHintType.POSSIBLE_FORMATS, formats);\r\n\r\n        this.codeReader = new BrowserMultiFormatReader(hints);\r\n\r\n        this.restartScan();\r\n    }\r\n\r\n    /**\r\n     * Properly changes the current target device.\r\n     *\r\n     * @param device\r\n     */\r\n    changeDevice(device: MediaDeviceInfo): void {\r\n        this.videoInputDevice = device;\r\n        this.startScan(device);\r\n    }\r\n\r\n    /**\r\n     * Properly changes the current target device using it's deviceId.\r\n     *\r\n     * @param deviceId\r\n     */\r\n    changeDeviceById(deviceId: string): void {\r\n        this.changeDevice(this.getDeviceById(deviceId));\r\n    }\r\n\r\n    /**\r\n     * Properly returns the target device using it's deviceId.\r\n     *\r\n     * @param deviceId\r\n     */\r\n    getDeviceById(deviceId: string): MediaDeviceInfo {\r\n        return this.videoInputDevices.find(device => device.deviceId === deviceId);\r\n    }\r\n\r\n    /**\r\n     * Sets the permission value and emmits the event.\r\n     */\r\n    private setPermission(hasPermission: boolean | null) {\r\n        this.hasPermission = hasPermission;\r\n        this.permissionResponse.next(hasPermission);\r\n        return this.permissionResponse;\r\n    }\r\n\r\n    /**\r\n     * Gets and registers all cammeras.\r\n     *\r\n     * @todo Return a Promise.\r\n     */\r\n    async askForPermission(): Promise<boolean> {\r\n\r\n        if (!this.hasNavigator) {\r\n            console.error('zxing-scanner', 'askForPermission', 'Can\\'t ask permission, navigator is not present.');\r\n            this.setPermission(null);\r\n            return this.hasPermission;\r\n        }\r\n\r\n        if (!this.isMediaDevicesSuported) {\r\n            console.error('zxing-scanner', 'askForPermission', 'Can\\'t get user media, this is not supported.');\r\n            this.setPermission(null);\r\n            return this.hasPermission;\r\n        }\r\n\r\n        let stream: MediaStream;\r\n\r\n        try {\r\n            // Will try to ask for permission\r\n            stream = await navigator.mediaDevices.getUserMedia({ audio: false, video: true });\r\n        } catch (err) {\r\n            return this.handlePermissionException(err);\r\n        }\r\n\r\n        let permission: boolean;\r\n\r\n        try {\r\n\r\n            // Start stream so Browser can display its permission-dialog\r\n            this.codeReader.bindVideoSrc(this.previewElemRef.nativeElement, stream);\r\n\r\n            // After permission was granted, we can stop it again\r\n            stream.getVideoTracks().forEach(track => {\r\n                track.stop();\r\n            });\r\n\r\n            // should stop the opened stream\r\n            this.codeReader.unbindVideoSrc(this.previewElemRef.nativeElement);\r\n\r\n            // if the scripts lives until here, that's only one mean:\r\n\r\n            // permission granted\r\n            permission = true;\r\n            this.setPermission(permission);\r\n\r\n        } catch (err) {\r\n\r\n            console.error('zxing-scanner', 'askForPermission', err);\r\n\r\n            // permission aborted\r\n            permission = null;\r\n            this.setPermission(permission);\r\n        }\r\n\r\n        // Returns the event emitter, so the dev can subscribe to it\r\n        return permission;\r\n    }\r\n\r\n    /**\r\n     * Returns the filtered permission.\r\n     *\r\n     * @param err\r\n     */\r\n    private handlePermissionException(err: DOMException): boolean {\r\n\r\n        // failed to grant permission to video input\r\n\r\n        console.warn('zxing-scanner', 'askForPermission', err);\r\n\r\n        let permission: boolean;\r\n\r\n        switch (err.name) {\r\n\r\n            // usually caused by not secure origins\r\n            case 'NotSupportedError':\r\n                console.warn('@zxing/ngx-scanner', err.message);\r\n                // could not claim\r\n                permission = null;\r\n                // can't check devices\r\n                this._hasDevices = null;\r\n                break;\r\n\r\n            // user denied permission\r\n            case 'NotAllowedError':\r\n                console.warn('@zxing/ngx-scanner', err.message);\r\n                // claimed and denied permission\r\n                permission = false;\r\n                // this means that input devices exists\r\n                this._hasDevices = true;\r\n                break;\r\n\r\n            // the device has no attached input devices\r\n            case 'NotFoundError':\r\n                console.warn('@zxing/ngx-scanner', err.message);\r\n                // no permissions claimed\r\n                permission = null;\r\n                // because there was no devices\r\n                this._hasDevices = false;\r\n                // tells the listener about the error\r\n                this.camerasNotFound.next(err);\r\n                break;\r\n\r\n            case 'NotReadableError':\r\n                console.warn('@zxing/ngx-scanner', 'Couldn\\'t read the device(s)\\'s stream, it\\'s probably in use by another app.');\r\n                // no permissions claimed\r\n                permission = null;\r\n                // there are devices, which I couldn't use\r\n                this._hasDevices = false;\r\n                // tells the listener about the error\r\n                this.camerasNotFound.next(err);\r\n                break;\r\n\r\n            default:\r\n                console.warn('@zxing/ngx-scanner', 'I was not able to define if I have permissions for camera or not.', err);\r\n                // unknown\r\n                permission = null;\r\n                // this._hasDevices = undefined;\r\n                break;\r\n\r\n        }\r\n\r\n        this.setPermission(permission);\r\n\r\n        // tells the listener about the error\r\n        this.permissionResponse.error(err);\r\n\r\n        return permission;\r\n    }\r\n\r\n    /**\r\n     * Starts the continuous scanning for the given device.\r\n     *\r\n     * @param deviceId The deviceId from the device.\r\n     */\r\n    scan(deviceId: string): void {\r\n        try {\r\n\r\n            this.codeReader.decodeFromInputVideoDevice((result: Result) => {\r\n\r\n                if (result) {\r\n                    this.dispatchScanSuccess(result);\r\n                } else {\r\n                    this.dispatchScanFailure();\r\n                }\r\n\r\n                this.dispatchScanComplete(result);\r\n\r\n            }, deviceId, this.previewElemRef.nativeElement);\r\n\r\n        } catch (err) {\r\n            this.dispatchScanError(err);\r\n            this.dispatchScanComplete(undefined);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts the scanning if allowed.\r\n     *\r\n     * @param device The device to be used in the scan.\r\n     */\r\n    startScan(device: MediaDeviceInfo): void {\r\n        if (this.scannerEnabled && device) {\r\n            this.scan(device.deviceId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops the scan service.\r\n     */\r\n    resetScan(): void {\r\n        this.codeReader.reset();\r\n    }\r\n\r\n    /**\r\n     * Stops and starts back the scan.\r\n     */\r\n    restartScan(): void {\r\n        this.resetScan();\r\n        this.startScan(this.device);\r\n    }\r\n\r\n    /**\r\n     * Dispatches the scan success event.\r\n     *\r\n     * @param result the scan result.\r\n     */\r\n    private dispatchScanSuccess(result: Result): void {\r\n        this.scanSuccess.next(result.getText());\r\n    }\r\n\r\n    /**\r\n     * Dispatches the scan failure event.\r\n     */\r\n    private dispatchScanFailure(): void {\r\n        this.scanFailure.next();\r\n    }\r\n\r\n    /**\r\n     * Dispatches the scan error event.\r\n     *\r\n     * @param err the error thing.\r\n     */\r\n    private dispatchScanError(error: any): void {\r\n        this.scanError.next(error);\r\n    }\r\n\r\n    /**\r\n     * Dispatches the scan event.\r\n     *\r\n     * @param result the scan result.\r\n     */\r\n    private dispatchScanComplete(result: Result): void {\r\n        this.scanComplete.next(result);\r\n    }\r\n\r\n    /**\r\n     * Enumerates all the available devices.\r\n     */\r\n    private async enumarateVideoDevices(): Promise<MediaDeviceInfo[]> {\r\n\r\n        if (!this.hasNavigator) {\r\n            console.error('zxing-scanner', 'enumarateVideoDevices', 'Can\\'t enumerate devices, navigator is not present.');\r\n            return;\r\n        }\r\n\r\n        if (!this.isEnumerateDevicesSuported) {\r\n            console.error('zxing-scanner', 'enumarateVideoDevices', 'Can\\'t enumerate devices, method not supported.');\r\n            return;\r\n        }\r\n\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n\r\n        this.videoInputDevices = [];\r\n\r\n        for (const device of devices) {\r\n\r\n            // @todo type this as `MediaDeviceInfo`\r\n            const videoDevice: any = {};\r\n\r\n            // tslint:disable-next-line:forin\r\n            for (const key in device) {\r\n                videoDevice[key] = device[key];\r\n            }\r\n\r\n            if (videoDevice.kind === 'video') {\r\n                videoDevice.kind = 'videoinput';\r\n            }\r\n\r\n            if (!videoDevice.deviceId) {\r\n                videoDevice.deviceId = (<any>videoDevice).id;\r\n            }\r\n\r\n            if (!videoDevice.label) {\r\n                videoDevice.label = 'Camera (no permission 🚫)';\r\n            }\r\n\r\n            if (videoDevice.kind === 'videoinput') {\r\n                this.videoInputDevices.push(videoDevice);\r\n            }\r\n        }\r\n\r\n        return this.videoInputDevices;\r\n    }\r\n}\r\n",
    "import { QRCodeReader } from '@zxing/library';\r\n\r\nimport { BrowserCodeReader } from './browser-code-reader';\r\n\r\nexport class BrowserQRCodeReader extends BrowserCodeReader {\r\n    public constructor(timeBetweenScansMillis: number = 500) {\r\n        super(new QRCodeReader(), timeBetweenScansMillis);\r\n    }\r\n}\r\n",
    "import { MultiFormatReader, DecodeHintType, BinaryBitmap, Result } from '@zxing/library';\r\n\r\nimport { BrowserCodeReader } from './browser-code-reader';\r\n\r\nexport class BrowserMultiFormatReader extends BrowserCodeReader {\r\n\r\n    protected readonly reader: MultiFormatReader;\r\n\r\n    public constructor(\r\n        hints: Map<DecodeHintType, any> = null,\r\n        timeBetweenScansMillis: number = 500\r\n    ) {\r\n        const reader = new MultiFormatReader();\r\n        reader.setHints(hints);\r\n        super(reader, timeBetweenScansMillis);\r\n    }\r\n\r\n    /**\r\n     * Overwrite decodeBitmap to call decodeWithState, which will pay\r\n     * attention to the hints set in the constructor function\r\n     */\r\n    protected decodeBitmap(binaryBitmap: BinaryBitmap): Result {\r\n        return this.reader.decodeWithState(binaryBitmap);\r\n    }\r\n}\r\n",
    "/// <reference path=\"./image-capture.d.ts\" />\r\n\r\nimport {\r\n    BinaryBitmap,\r\n    ChecksumException,\r\n    Exception,\r\n    FormatException,\r\n    HTMLCanvasElementLuminanceSource,\r\n    HybridBinarizer,\r\n    NotFoundException,\r\n    Reader,\r\n    Result,\r\n} from '@zxing/library';\r\n\r\nimport {\r\n    BehaviorSubject,\r\n    Observable,\r\n    Subscriber,\r\n    Subscription\r\n} from 'rxjs';\r\n\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n/**\r\n * Based on zxing-typescript BrowserCodeReader\r\n */\r\nexport class BrowserCodeReader {\r\n\r\n    /**\r\n     * The HTML video element, used to display the camera stream.\r\n     */\r\n    private videoElement: HTMLVideoElement;\r\n    /**\r\n     * Should contain the current registered listener for video play-ended,\r\n     * used to unregister that listener when needed.\r\n     */\r\n    private videoPlayEndedEventListener: EventListener;\r\n    /**\r\n     * Should contain the current registered listener for video playing,\r\n     * used to unregister that listener when needed.\r\n     */\r\n    private videoPlayingEventListener: EventListener;\r\n    /**\r\n     * Should contain the current registered listener for video loaded-metadata,\r\n     * used to unregister that listener when needed.\r\n     */\r\n    private videoLoadedMetadataEventListener: EventListener;\r\n\r\n    /**\r\n     * The HTML image element, used as a fallback for the video element when decoding.\r\n     */\r\n    private imageElement: HTMLImageElement;\r\n    /**\r\n     * Should contain the current registered listener for image loading,\r\n     * used to unregister that listener when needed.\r\n     */\r\n    private imageLoadedEventListener: EventListener;\r\n\r\n    /**\r\n     * The HTML canvas element, used to draw the video or image's frame for decoding.\r\n     */\r\n    private canvasElement: HTMLCanvasElement;\r\n    /**\r\n     * The HTML canvas element context.\r\n     */\r\n    private canvasElementContext: CanvasRenderingContext2D;\r\n\r\n    /**\r\n     * Used to control the decoding stream when it's open.\r\n     */\r\n    private decodingStream: Subscription;\r\n\r\n    /**\r\n     * The stream output from camera.\r\n     */\r\n    private stream: MediaStream;\r\n    /**\r\n     * The track from camera.\r\n     */\r\n    private track: MediaStreamTrack;\r\n    /**\r\n     * Shows if torch is available on the camera.\r\n     */\r\n    private torchCompatible = new BehaviorSubject<boolean>(false);\r\n\r\n    /**\r\n     * The device id of the current media device.\r\n     */\r\n    private deviceId: string;\r\n\r\n    /**\r\n     * Constructor for dependency injection.\r\n     *\r\n     * @param reader The barcode reader to be used to decode the stream.\r\n     * @param timeBetweenScans The scan throttling in milliseconds.\r\n     */\r\n    public constructor(protected readonly reader: Reader, private timeBetweenScans: number = 500) { }\r\n\r\n    /**\r\n     * Starts the decoding from the current or a new video element.\r\n     *\r\n     * @param callbackFn The callback to be executed after every scan attempt\r\n     * @param deviceId The device's to be used Id\r\n     * @param videoElement A new video element\r\n     *\r\n     * @todo Return Promise<Result>\r\n     */\r\n    public async decodeFromInputVideoDevice(\r\n        callbackFn?: (result: Result) => any,\r\n        deviceId?: string,\r\n        videoElement?: HTMLVideoElement\r\n    ): Promise<void> {\r\n\r\n        this.reset();\r\n\r\n        this.prepareVideoElement(videoElement);\r\n\r\n        // Keeps the deviceId between scanner resets.\r\n        if (typeof deviceId !== 'undefined') {\r\n            this.deviceId = deviceId;\r\n        }\r\n\r\n        const video = typeof deviceId === 'undefined'\r\n            ? { facingMode: { exact: 'environment' } }\r\n            : { deviceId: { exact: deviceId } };\r\n\r\n        const constraints: MediaStreamConstraints = {\r\n            audio: false,\r\n            video\r\n        };\r\n\r\n        if (typeof navigator === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const stream = await navigator\r\n                .mediaDevices\r\n                .getUserMedia(constraints);\r\n\r\n            this.startDecodeFromStream(stream, callbackFn);\r\n\r\n        } catch (err) {\r\n            /* handle the error, or not */\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the new stream and request a new decoding-with-delay.\r\n     *\r\n     * @param stream The stream to be shown in the video element.\r\n     * @param callbackFn A callback for the decode method.\r\n     *\r\n     * @todo Return Promise<Result>\r\n     */\r\n    private startDecodeFromStream(stream: MediaStream, callbackFn?: (result: Result) => any): void {\r\n        this.stream = stream;\r\n        this.checkTorchCompatibility(this.stream);\r\n        this.bindVideoSrc(this.videoElement, this.stream);\r\n        this.bindEvents(this.videoElement, callbackFn);\r\n    }\r\n\r\n    /**\r\n     * Defines what the videoElement src will be.\r\n     *\r\n     * @param videoElement\r\n     * @param stream\r\n     */\r\n    public bindVideoSrc(videoElement: HTMLVideoElement, stream: MediaStream): void {\r\n        // Older browsers may not have `srcObject`\r\n        try {\r\n            // @NOTE Throws Exception if interrupted by a new loaded request\r\n            videoElement.srcObject = stream;\r\n        } catch (err) {\r\n            // @NOTE Avoid using this in new browsers, as it is going away.\r\n            videoElement.src = window.URL.createObjectURL(stream);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unbinds a HTML video src property.\r\n     *\r\n     * @param videoElement\r\n     */\r\n    public unbindVideoSrc(videoElement: HTMLVideoElement): void {\r\n        try {\r\n            videoElement.srcObject = null;\r\n        } catch (err) {\r\n            videoElement.src = '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Binds listeners and callbacks to the videoElement.\r\n     *\r\n     * @param videoElement\r\n     * @param callbackFn\r\n     */\r\n    private bindEvents(videoElement: HTMLVideoElement, callbackFn?: (result: Result) => any): void {\r\n\r\n        if (typeof callbackFn !== 'undefined') {\r\n            this.videoPlayingEventListener = () => this.decodingStream = this.decodeWithDelay(this.timeBetweenScans)\r\n                .pipe(catchError((e, x) => this.handleDecodeStreamError(e, x)))\r\n                .subscribe((x: Result) => callbackFn(x));\r\n        }\r\n\r\n        videoElement.addEventListener('playing', this.videoPlayingEventListener);\r\n\r\n        this.videoLoadedMetadataEventListener = () => videoElement.play();\r\n\r\n        videoElement.addEventListener('loadedmetadata', this.videoLoadedMetadataEventListener);\r\n    }\r\n\r\n    /**\r\n     * Checks if the stream supports torch control.\r\n     *\r\n     * @param stream The media stream used to check.\r\n     */\r\n    private async checkTorchCompatibility(stream: MediaStream): Promise<void> {\r\n        try {\r\n            this.track = stream.getVideoTracks()[0];\r\n            const imageCapture = new ImageCapture(this.track);\r\n            const capabilities = await imageCapture.getPhotoCapabilities();\r\n            const compatible = !!capabilities.torch || ('fillLightMode' in capabilities && capabilities.fillLightMode.length !== 0);\r\n            this.torchCompatible.next(compatible);\r\n        } catch (err) {\r\n            this.torchCompatible.next(false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enables and disables the device torch.\r\n     */\r\n    public setTorch(on: boolean): void {\r\n        if (!this.torchCompatible.value) {\r\n            return;\r\n        }\r\n        if (on) {\r\n            this.track.applyConstraints({\r\n                advanced: [<any>{ torch: true }]\r\n            });\r\n        } else {\r\n            this.restart();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Observable that says if there's a torch available for the current device.\r\n     */\r\n    public get torchAvailable(): Observable<boolean> {\r\n        return this.torchCompatible.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Sets a HTMLVideoElement for scanning or creates a new one.\r\n     *\r\n     * @param videoElement The HTMLVideoElement to be set.\r\n     */\r\n    private prepareVideoElement(videoElement?: HTMLVideoElement): void {\r\n\r\n        if (!videoElement && typeof document !== 'undefined') {\r\n            videoElement = document.createElement('video');\r\n            videoElement.width = 200;\r\n            videoElement.height = 200;\r\n        }\r\n\r\n        this.videoElement = videoElement;\r\n    }\r\n\r\n    /**\r\n     * Opens a decoding stream.\r\n     */\r\n    private decodeWithDelay(delay: number = 500): Observable<Result> {\r\n        // The decoding stream.\r\n        return Observable.create((observer: Subscriber<Result>) => {\r\n            // Creates on Subscribe.\r\n            const intervalId = setInterval(() => {\r\n                try {\r\n                    observer.next(this.decode());\r\n                } catch (err) {\r\n                    observer.error(err);\r\n                }\r\n            }, delay);\r\n            // Destroys on Unsubscribe.\r\n            return () => clearInterval(intervalId);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets the BinaryBitmap for ya! (and decodes it)\r\n     */\r\n    private decode(): Result {\r\n\r\n        // get binary bitmap for decode function\r\n        const binaryBitmap = this.createBinaryBitmap(this.videoElement || this.imageElement);\r\n\r\n        return this.decodeBitmap(binaryBitmap);\r\n    }\r\n\r\n    /**\r\n     * Call the encapsulated readers decode\r\n     */\r\n    protected decodeBitmap(binaryBitmap: BinaryBitmap): Result {\r\n        return this.reader.decode(binaryBitmap);\r\n    }\r\n\r\n    /**\r\n     * Administra um erro gerado durante o decode stream.\r\n     */\r\n    private handleDecodeStreamError(err: Exception, caught: Observable<Result>): Observable<Result> {\r\n\r\n        if (\r\n            // scan Failure - found nothing, no error\r\n            err instanceof NotFoundException ||\r\n            // scan Error - found the QR but got error on decoding\r\n            err instanceof ChecksumException ||\r\n            err instanceof FormatException\r\n        ) {\r\n            return caught;\r\n        }\r\n\r\n        throw err;\r\n    }\r\n\r\n    /**\r\n     * Creates a binaryBitmap based in some image source.\r\n     *\r\n     * @param mediaElement HTML element containing drawable image source.\r\n     */\r\n    private createBinaryBitmap(mediaElement: HTMLVideoElement | HTMLImageElement): BinaryBitmap {\r\n\r\n        if (undefined === this.canvasElementContext) {\r\n            this.prepareCaptureCanvas();\r\n        }\r\n\r\n        this.canvasElementContext.drawImage(mediaElement, 0, 0);\r\n\r\n        const luminanceSource = new HTMLCanvasElementLuminanceSource(this.canvasElement);\r\n        const hybridBinarizer = new HybridBinarizer(luminanceSource);\r\n\r\n        return new BinaryBitmap(hybridBinarizer);\r\n    }\r\n\r\n    /**\r\n     * 🖌 Prepares the canvas for capture and scan frames.\r\n     */\r\n    private prepareCaptureCanvas(): void {\r\n\r\n        if (typeof document === 'undefined') {\r\n\r\n            this.canvasElement = undefined;\r\n            this.canvasElementContext = undefined;\r\n\r\n            return;\r\n        }\r\n\r\n        const canvasElement = document.createElement('canvas');\r\n\r\n        let width: number;\r\n        let height: number;\r\n\r\n        if (typeof this.videoElement !== 'undefined') {\r\n            width = this.videoElement.videoWidth;\r\n            height = this.videoElement.videoHeight;\r\n        }\r\n\r\n        if (typeof this.imageElement !== 'undefined') {\r\n            width = this.imageElement.naturalWidth || this.imageElement.width;\r\n            height = this.imageElement.naturalHeight || this.imageElement.height;\r\n        }\r\n\r\n        canvasElement.style.width = width + 'px';\r\n        canvasElement.style.height = height + 'px';\r\n        canvasElement.width = width;\r\n        canvasElement.height = height;\r\n\r\n        this.canvasElement = canvasElement;\r\n        this.canvasElementContext = canvasElement.getContext('2d');\r\n    }\r\n\r\n    /**\r\n     * Stops the continuous scan and cleans the stream.\r\n     */\r\n    private stop(): void {\r\n\r\n        if (this.decodingStream) {\r\n            this.decodingStream.unsubscribe();\r\n        }\r\n\r\n        if (this.stream) {\r\n            this.stream.getVideoTracks().forEach(t => t.stop());\r\n            this.stream = undefined;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Resets the scanner and it's configurations.\r\n     */\r\n    public reset(): void {\r\n\r\n        // stops the camera, preview and scan 🔴\r\n\r\n        this.stop();\r\n\r\n        if (this.videoElement) {\r\n\r\n            // first gives freedon to the element 🕊\r\n\r\n            if (typeof this.videoPlayEndedEventListener !== 'undefined') {\r\n                this.videoElement.removeEventListener('ended', this.videoPlayEndedEventListener);\r\n            }\r\n\r\n            if (typeof this.videoPlayingEventListener !== 'undefined') {\r\n                this.videoElement.removeEventListener('playing', this.videoPlayingEventListener);\r\n            }\r\n\r\n            if (typeof this.videoLoadedMetadataEventListener !== 'undefined') {\r\n                this.videoElement.removeEventListener('loadedmetadata', this.videoLoadedMetadataEventListener);\r\n            }\r\n\r\n            // then forgets about that element 😢\r\n\r\n            this.unbindVideoSrc(this.videoElement);\r\n\r\n            this.videoElement.removeAttribute('src');\r\n            this.videoElement = undefined;\r\n        }\r\n\r\n        if (this.imageElement) {\r\n\r\n            // first gives freedon to the element 🕊\r\n\r\n            if (undefined !== this.videoPlayEndedEventListener) {\r\n                this.imageElement.removeEventListener('load', this.imageLoadedEventListener);\r\n            }\r\n\r\n            // then forgets about that element 😢\r\n\r\n            this.imageElement.src = undefined;\r\n            this.imageElement.removeAttribute('src');\r\n            this.imageElement = undefined;\r\n        }\r\n\r\n        // cleans canvas references 🖌\r\n\r\n        this.canvasElementContext = undefined;\r\n        this.canvasElement = undefined;\r\n    }\r\n\r\n    /**\r\n     * Restarts the scanner.\r\n     */\r\n    private restart(): void {\r\n        // reset\r\n        // start\r\n        this.decodeFromInputVideoDevice(undefined, this.deviceId, this.videoElement);\r\n    }\r\n}\r\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"
  ],
  "names": [
    "FormsModule",
    "CommonModule",
    "NgModule",
    "Output",
    "Input",
    "ViewChild",
    "ChangeDetectionStrategy",
    "Component",
    "tslib_1.__values",
    "BarcodeFormat",
    "EventEmitter",
    "QRCodeReader",
    "tslib_1.__extends",
    "MultiFormatReader",
    "BinaryBitmap",
    "HybridBinarizer",
    "HTMLCanvasElementLuminanceSource",
    "FormatException",
    "ChecksumException",
    "NotFoundException",
    "Observable",
    "catchError",
    "BehaviorSubject"
  ],
  "mappings": "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"
}
