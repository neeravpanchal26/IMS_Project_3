{"remainingRequest":"/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/ng-simple-slideshow/ng-simple-slideshow.es5.js","dependencies":[{"path":"/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/ng-simple-slideshow/ng-simple-slideshow.es5.js","mtime":499162500000},{"path":"/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/cache-loader/dist/cjs.js","mtime":1531987733690},{"path":"/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1531987729634}],"contextDependencies":[],"result":["import { Component, EventEmitter, Inject, Injectable, Input, NgModule, Output, PLATFORM_ID, Renderer2, ViewChild } from '@angular/core';\nimport { CommonModule, DOCUMENT, isPlatformServer } from '@angular/common';\nimport { isNullOrUndefined, isUndefined } from 'util';\nimport { BrowserTransferStateModule, DomSanitizer, TransferState, makeStateKey } from '@angular/platform-browser';\nvar SwipeService = /*@__PURE__*/ (function () {\n    function SwipeService() {\n    }\n    /**\n     * \\@description detect the direction of the swipe, and return a -1 or 1 if the duration is long enough\n     *              else return a 0 to do nothing\n     * @param {?} e\n     * @param {?} when\n     * @param {?=} debug\n     * @return {?}\n     */\n    SwipeService.prototype.swipe = function (e, when, debug) {\n        if (debug === true)\n            console.log(\"SwipeService::swipe(\" + e + \", \" + when + \")\");\n        var /** @type {?} */ coord = [e.changedTouches[0].pageX, e.changedTouches[0].pageY];\n        var /** @type {?} */ time = new Date().getTime();\n        if (when === 'start') {\n            this.swipeCoord = coord;\n            this.swipeTime = time;\n        }\n        else if (when === 'end') {\n            var /** @type {?} */ direction = [coord[0] - this.swipeCoord[0], coord[1] - this.swipeCoord[1]];\n            var /** @type {?} */ duration = time - this.swipeTime;\n            if (duration < 1000 // Short enough\n                && Math.abs(direction[1]) < Math.abs(direction[0]) // Horizontal enough\n                && Math.abs(direction[0]) > 30) {\n                return direction[0] < 0 ? 1 : -1;\n            }\n        }\n        return 0;\n    };\n    return SwipeService;\n}());\nvar FIRST_SLIDE_KEY = makeStateKey('firstSlide');\nvar SlideshowComponent = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} swipeService\n     * @param {?} renderer\n     * @param {?} transferState\n     * @param {?} sanitizer\n     * @param {?} platform_id\n     * @param {?} document\n     */\n    function SlideshowComponent(swipeService, renderer, transferState, sanitizer, platform_id, document) {\n        this.swipeService = swipeService;\n        this.renderer = renderer;\n        this.transferState = transferState;\n        this.sanitizer = sanitizer;\n        this.platform_id = platform_id;\n        this.document = document;\n        this.slideIndex = 0;\n        this.slides = [];\n        this.initial = true;\n        this.isHidden = false;\n        this.imageUrls = [];\n        this.height = '100%';\n        this.showArrows = true;\n        this.disableSwiping = false;\n        this.autoPlay = false;\n        this.autoPlayInterval = 3333;\n        this.stopAutoPlayOnSlide = true;\n        this.autoPlayWaitForLazyLoad = false;\n        this.debug = false;\n        this.backgroundSize = 'cover';\n        this.backgroundPosition = 'center center';\n        this.backgroundRepeat = 'no-repeat';\n        this.showDots = false;\n        this.dotColor = '#FFF';\n        this.showCaptions = true;\n        this.captionColor = '#FFF';\n        this.captionBackground = 'rgba(0, 0, 0, .35)';\n        this.lazyLoad = false;\n        this.hideOnNoSlides = false;\n        this.onSlideLeft = new EventEmitter();\n        this.onSlideRight = new EventEmitter();\n        this.onSwipeLeft = new EventEmitter();\n        this.onSwipeRight = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    SlideshowComponent.prototype.ngDoCheck = function () {\n        if (this.debug === true)\n            console.log(\"ngOnChanges()\");\n        // if this is the first being called, create a copy of the input\n        if (!isNullOrUndefined(this.imageUrls) && this.imageUrls.length > 0) {\n            if (this.initial === true)\n                this.urlCache = Array.from(this.imageUrls);\n            if (this.isHidden === true) {\n                this.renderer.removeStyle(this.container.nativeElement, 'display');\n                this.isHidden = false;\n            }\n            this.setSlides();\n        }\n        else if (this.hideOnNoSlides === true) {\n            this.renderer.setStyle(this.container.nativeElement, 'display', 'none');\n            this.isHidden = true;\n        }\n        this.setStyles();\n        this.handleAutoPlay();\n    };\n    /**\n     * \\@description this is the function that should be called to make the slides change.\n     *              indexDirection to move back is -1, to move forward is 1, and to stay in place is 0.\n     *              0 is taken into account for failed swipes\n     * @param {?} indexDirection\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    SlideshowComponent.prototype.onSlide = function (indexDirection, isSwipe) {\n        if (this.debug === true)\n            console.log(\"onSlide(\" + indexDirection + \", \" + isSwipe + \")\");\n        this.handleAutoPlay(this.stopAutoPlayOnSlide);\n        this.slide(indexDirection, isSwipe);\n    };\n    /**\n     * \\@description Use the swipe service to detect swipe events from phone and tablets\n     * @param {?} e\n     * @param {?} when\n     * @return {?}\n     */\n    SlideshowComponent.prototype.onSwipe = function (e, when) {\n        if (this.disableSwiping === true)\n            return;\n        var /** @type {?} */ indexDirection = this.swipeService.swipe(e, when, this.debug === true);\n        // handle a failed swipe\n        if (indexDirection === 0)\n            return;\n        else\n            this.onSlide(indexDirection, true);\n    };\n    /**\n     * \\@description Redirect to current slide \"href\" if defined\n     * @param {?} e\n     * @return {?}\n     */\n    SlideshowComponent.prototype.onClick = function (e) {\n        e.preventDefault();\n        var /** @type {?} */ currentSlide = this.slides.length > 0 && this.slides[this.slideIndex];\n        if (currentSlide && !isNullOrUndefined(currentSlide.image.clickAction)) {\n            currentSlide.image.clickAction();\n        }\n        else if (currentSlide && !isNullOrUndefined(currentSlide.image.href)) {\n            this.document.location.href = currentSlide.image.href;\n        }\n    };\n    /**\n     * \\@description set the index to the desired index - 1 and simulate a right slide\n     * @param {?} index\n     * @return {?}\n     */\n    SlideshowComponent.prototype.goToSlide = function (index) {\n        if (this.debug === true)\n            console.log(\"goToSlide(\" + index + \")\");\n        var /** @type {?} */ beforeClickIndex = this.slideIndex;\n        this.slideIndex = index - 1;\n        this.setSlideIndex(1);\n        if (!this.slides[this.slideIndex].loaded)\n            this.loadRemainingSlides();\n        this.handleAutoPlay(this.stopAutoPlayOnSlide);\n        this.slideRight(beforeClickIndex);\n        this.slides[beforeClickIndex].selected = false;\n        this.slides[this.slideIndex].selected = true;\n    };\n    /**\n     * \\@description set the index to the desired index - 1 and simulate a right slide\n     * @param {?} index\n     * @return {?}\n     */\n    SlideshowComponent.prototype.getSlideStyle = function (index) {\n        if (this.debug === true)\n            console.log(\"getSlideStyle(\" + index + \")\");\n        var /** @type {?} */ slide = this.slides[index];\n        if (slide.loaded) {\n            return {\n                \"background-image\": 'url(' + slide.image.url + ')',\n                \"background-size\": slide.image.backgroundSize || this.backgroundSize,\n                \"background-position\": slide.image.backgroundPosition || this.backgroundPosition,\n                \"background-repeat\": slide.image.backgroundRepeat || this.backgroundRepeat\n            };\n        }\n        else {\n            // doesn't compile correctly if returning an empty object, sooooo.....\n            return {\n                \"background-image\": undefined,\n                \"background-size\": undefined,\n                \"background-position\": undefined,\n                \"background-repeat\": undefined\n            };\n        }\n    };\n    /**\n     * \\@description Set the new slide index, then make the transition happen.\n     * @param {?} indexDirection\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    SlideshowComponent.prototype.slide = function (indexDirection, isSwipe) {\n        if (this.debug === true)\n            console.log(\"slide(\" + indexDirection + \", \" + isSwipe + \")\");\n        var /** @type {?} */ oldIndex = this.slideIndex;\n        this.setSlideIndex(indexDirection);\n        if (!this.slides[this.slideIndex].loaded)\n            this.loadRemainingSlides();\n        if (indexDirection === 1)\n            this.slideRight(oldIndex, isSwipe);\n        else\n            this.slideLeft(oldIndex, isSwipe);\n        this.slides[oldIndex].selected = false;\n        this.slides[this.slideIndex].selected = true;\n    };\n    /**\n     * \\@description This is just treating the url array like a circular list.\n     * @param {?} indexDirection\n     * @return {?}\n     */\n    SlideshowComponent.prototype.setSlideIndex = function (indexDirection) {\n        if (this.debug === true)\n            console.log(\"setSlideIndex(\" + this.slideIndex + \")\");\n        this.slideIndex += indexDirection;\n        if (this.slideIndex < 0)\n            this.slideIndex = this.slides.length - 1;\n        if (this.slideIndex >= this.slides.length)\n            this.slideIndex = 0;\n    };\n    /**\n     * \\@description This function handles the variables to move the CSS classes around accordingly.\n     *              In order to correctly handle animations, the new slide as well as the slides to\n     *              the left and right are assigned classes.\n     * @param {?} oldIndex\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    SlideshowComponent.prototype.slideLeft = function (oldIndex, isSwipe) {\n        if (this.debug === true)\n            console.log(\"slideLeft(\" + oldIndex + \", \" + isSwipe + \")\");\n        if (isSwipe === true)\n            this.onSwipeLeft.emit(this.slideIndex);\n        else\n            this.onSlideLeft.emit(this.slideIndex);\n        this.slides[this.getLeftSideIndex(oldIndex)].leftSide = false;\n        this.slides[oldIndex].leftSide = true;\n        this.slides[oldIndex].action = 'slideOutLeft';\n        this.slides[this.slideIndex].rightSide = false;\n        this.slides[this.getRightSideIndex()].rightSide = true;\n        this.slides[this.slideIndex].action = 'slideInRight';\n    };\n    /**\n     * \\@description This function handles the variables to move the CSS classes around accordingly.\n     *              In order to correctly handle animations, the new slide as well as the slides to\n     *              the left and right are assigned classes.\n     * @param {?} oldIndex\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    SlideshowComponent.prototype.slideRight = function (oldIndex, isSwipe) {\n        if (this.debug === true)\n            console.log(\"slideRight(\" + oldIndex + \", \" + isSwipe + \")\");\n        if (isSwipe === true)\n            this.onSwipeRight.emit(this.slideIndex);\n        else\n            this.onSlideRight.emit(this.slideIndex);\n        this.slides[this.getRightSideIndex(oldIndex)].rightSide = false;\n        this.slides[oldIndex].rightSide = true;\n        this.slides[oldIndex].action = 'slideOutRight';\n        this.slides[this.slideIndex].leftSide = false;\n        this.slides[this.getLeftSideIndex()].leftSide = true;\n        this.slides[this.slideIndex].action = 'slideInLeft';\n    };\n    /**\n     * \\@description Check to make sure slide images have been set or haven't changed\n     * @return {?}\n     */\n    SlideshowComponent.prototype.setSlides = function () {\n        if (!isNullOrUndefined(this.imageUrls)) {\n            if (this.debug === true)\n                console.log(\"setSlides()\");\n            if (this.checkCache() || this.initial === true) {\n                if (this.debug === true) {\n                    console.log(\"this.checkCache() || this.initial === true\");\n                    console.log(\"this.initial: \" + this.initial);\n                    console.log(\"this.urlCache: \" + this.urlCache);\n                    console.log(\"this.imageUrls: \" + this.imageUrls);\n                }\n                this.initial = false;\n                this.urlCache = Array.from(this.imageUrls);\n                this.slides = [];\n                if (this.lazyLoad === true) {\n                    this.buildLazyLoadSlideArray();\n                }\n                else {\n                    this.buildSlideArray();\n                }\n            }\n        }\n    };\n    /**\n     * \\@description create the slides without background urls, which will be added in\n     *              for the \"lazy load,\" then load only the first slide\n     * @return {?}\n     */\n    SlideshowComponent.prototype.buildLazyLoadSlideArray = function () {\n        if (this.debug === true)\n            console.log(\"buildLazyLoadSlideArray()\");\n        for (var _i = 0, _a = this.imageUrls; _i < _a.length; _i++) {\n            var image = _a[_i];\n            this.slides.push({\n                image: (typeof image === 'string' ? { url: null } : { url: null, href: image.href || '' }),\n                action: '',\n                leftSide: false,\n                rightSide: false,\n                selected: false,\n                loaded: false\n            });\n        }\n        this.slides[this.slideIndex].selected = true;\n        this.loadFirstSlide();\n    };\n    /**\n     * \\@description create the slides with background urls all at once\n     * @return {?}\n     */\n    SlideshowComponent.prototype.buildSlideArray = function () {\n        if (this.debug === true)\n            console.log(\"buildSlideArray()\");\n        for (var _i = 0, _a = this.imageUrls; _i < _a.length; _i++) {\n            var image = _a[_i];\n            this.slides.push({\n                image: (typeof image === 'string' ? { url: image } : image),\n                action: '',\n                leftSide: false,\n                rightSide: false,\n                selected: false,\n                loaded: true\n            });\n        }\n        this.slides[this.slideIndex].selected = true;\n    };\n    /**\n     * \\@description load the first slide image if lazy loading\n     *              this takes server side and browser side into account\n     * @return {?}\n     */\n    SlideshowComponent.prototype.loadFirstSlide = function () {\n        var _this = this;\n        if (this.debug === true)\n            console.log(\"loadFirstSlide()\");\n        var /** @type {?} */ tmpIndex = this.slideIndex;\n        var /** @type {?} */ tmpImage = this.imageUrls[tmpIndex];\n        // if server side, we don't need to worry about the rest of the slides\n        if (isPlatformServer(this.platform_id)) {\n            this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n            this.slides[tmpIndex].loaded = true;\n            this.transferState.set(FIRST_SLIDE_KEY, this.slides[tmpIndex]);\n        }\n        else {\n            var /** @type {?} */ firstSlideFromTransferState = this.transferState.get(FIRST_SLIDE_KEY, /** @type {?} */ (null));\n            // if the first slide didn't finish loading on the server side, we need to load it\n            if (firstSlideFromTransferState === null) {\n                var /** @type {?} */ loadImage = new Image();\n                loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n                loadImage.addEventListener('load', function () {\n                    _this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n                    _this.slides[tmpIndex].loaded = true;\n                });\n            }\n            else {\n                this.slides[tmpIndex] = firstSlideFromTransferState;\n                this.transferState.remove(FIRST_SLIDE_KEY);\n            }\n        }\n    };\n    /**\n     * \\@description if lazy loading in browser, start loading remaining slides\n     * \\@todo: figure out how to not show the spinner if images are loading fast enough\n     * @return {?}\n     */\n    SlideshowComponent.prototype.loadRemainingSlides = function () {\n        var _this = this;\n        if (this.debug === true)\n            console.log(\"loadRemainingSlides()\");\n        var _loop_1 = function (i) {\n            if (!this_1.slides[i].loaded) {\n                new Promise(function (resolve) {\n                    var /** @type {?} */ tmpImage = _this.imageUrls[i];\n                    var /** @type {?} */ loadImage = new Image();\n                    loadImage.addEventListener('load', function () {\n                        _this.slides[i].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n                        _this.slides[i].loaded = true;\n                        resolve();\n                    });\n                    loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n                });\n            }\n        };\n        var this_1 = this;\n        for (var /** @type {?} */ i = 0; i < this.slides.length; i++) {\n            _loop_1(/** @type {?} */ i);\n        }\n    };\n    /**\n     * \\@description Start or stop autoPlay, don't do it at all server side\n     * @param {?=} stopAutoPlay\n     * @return {?}\n     */\n    SlideshowComponent.prototype.handleAutoPlay = function (stopAutoPlay) {\n        var _this = this;\n        if (isPlatformServer(this.platform_id))\n            return;\n        if (stopAutoPlay === true || this.autoPlay === false) {\n            if (this.debug === true)\n                console.log(\"stop autoPlay\");\n            if (!isNullOrUndefined(this.autoplayIntervalId))\n                clearInterval(this.autoplayIntervalId);\n        }\n        else if (isNullOrUndefined(this.autoplayIntervalId)) {\n            if (this.debug === true)\n                console.log(\"start autoPlay\");\n            this.autoplayIntervalId = setInterval(function () {\n                if (_this.debug === true)\n                    console.log(\"autoPlay slide event\");\n                if (!_this.autoPlayWaitForLazyLoad || (_this.autoPlayWaitForLazyLoad && _this.slides[_this.slideIndex].loaded))\n                    _this.slide(1);\n            }, this.autoPlayInterval);\n        }\n    };\n    /**\n     * \\@description Keep the styles up to date with the input\n     * @return {?}\n     */\n    SlideshowComponent.prototype.setStyles = function () {\n        if (this.debug === true)\n            console.log(\"setStyles()\");\n        if (!isNullOrUndefined(this.height))\n            this.renderer.setStyle(this.container.nativeElement, 'height', this.height);\n        if (!isNullOrUndefined(this.minHeight))\n            this.renderer.setStyle(this.container.nativeElement, 'min-height', this.minHeight);\n        if (!isNullOrUndefined(this.arrowSize)) {\n            this.renderer.setStyle(this.prevArrow.nativeElement, 'height', this.arrowSize);\n            this.renderer.setStyle(this.prevArrow.nativeElement, 'width', this.arrowSize);\n            this.renderer.setStyle(this.nextArrow.nativeElement, 'height', this.arrowSize);\n            this.renderer.setStyle(this.nextArrow.nativeElement, 'width', this.arrowSize);\n        }\n    };\n    /**\n     * \\@description compare image array to the cache, returns false if no changes\n     * @return {?}\n     */\n    SlideshowComponent.prototype.checkCache = function () {\n        var _this = this;\n        if (this.debug === true)\n            console.log(\"checkCache()\");\n        return !(this.urlCache.length === this.imageUrls.length && this.urlCache.every(function (cacheElement, i) { return cacheElement === _this.imageUrls[i]; }));\n    };\n    /**\n     * \\@description get the index for the slide to the left of the new slide\n     * @param {?=} i\n     * @return {?}\n     */\n    SlideshowComponent.prototype.getLeftSideIndex = function (i) {\n        if (isUndefined(i))\n            i = this.slideIndex;\n        if (--i < 0)\n            i = this.slides.length - 1;\n        return i;\n    };\n    /**\n     * \\@description get the index for the slide to the right of the new slide\n     * @param {?=} i\n     * @return {?}\n     */\n    SlideshowComponent.prototype.getRightSideIndex = function (i) {\n        if (isUndefined(i))\n            i = this.slideIndex;\n        if (++i >= this.slides.length)\n            i = 0;\n        return i;\n    };\n    return SlideshowComponent;\n}());\nvar SlideshowModule = /*@__PURE__*/ (function () {\n    function SlideshowModule() {\n    }\n    return SlideshowModule;\n}());\n/**\n * Generated bundle index. Do not edit.\n */\nexport { SlideshowModule, SlideshowComponent as ɵa, SwipeService as ɵb };\n\n\n\n",{"version":3,"file":"/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/ng-simple-slideshow/ng-simple-slideshow.es5.js.post-build-optimizer.js","sourceRoot":"","sources":["/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/ng-simple-slideshow/ng-simple-slideshow.es5.js.pre-build-optimizer.js"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Inject, Injectable, Input, NgModule, Output, PLATFORM_ID, Renderer2, ViewChild } from '@angular/core';\nimport { CommonModule, DOCUMENT, isPlatformServer } from '@angular/common';\nimport { isNullOrUndefined, isUndefined } from 'util';\nimport { BrowserTransferStateModule, DomSanitizer, TransferState, makeStateKey } from '@angular/platform-browser';\nvar SwipeService = /** @class */ (function () {\n    function SwipeService() {\n    }\n    /**\n     * \\@description detect the direction of the swipe, and return a -1 or 1 if the duration is long enough\n     *              else return a 0 to do nothing\n     * @param {?} e\n     * @param {?} when\n     * @param {?=} debug\n     * @return {?}\n     */\n    SwipeService.prototype.swipe = function (e, when, debug) {\n        if (debug === true)\n            console.log(\"SwipeService::swipe(\" + e + \", \" + when + \")\");\n        var /** @type {?} */ coord = [e.changedTouches[0].pageX, e.changedTouches[0].pageY];\n        var /** @type {?} */ time = new Date().getTime();\n        if (when === 'start') {\n            this.swipeCoord = coord;\n            this.swipeTime = time;\n        }\n        else if (when === 'end') {\n            var /** @type {?} */ direction = [coord[0] - this.swipeCoord[0], coord[1] - this.swipeCoord[1]];\n            var /** @type {?} */ duration = time - this.swipeTime;\n            if (duration < 1000 // Short enough\n                && Math.abs(direction[1]) < Math.abs(direction[0]) // Horizontal enough\n                && Math.abs(direction[0]) > 30) {\n                return direction[0] < 0 ? 1 : -1;\n            }\n        }\n        return 0;\n    };\n    return SwipeService;\n}());\nSwipeService.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nSwipeService.ctorParameters = function () { return []; };\nvar FIRST_SLIDE_KEY = makeStateKey('firstSlide');\nvar SlideshowComponent = /** @class */ (function () {\n    /**\n     * @param {?} swipeService\n     * @param {?} renderer\n     * @param {?} transferState\n     * @param {?} sanitizer\n     * @param {?} platform_id\n     * @param {?} document\n     */\n    function SlideshowComponent(swipeService, renderer, transferState, sanitizer, platform_id, document) {\n        this.swipeService = swipeService;\n        this.renderer = renderer;\n        this.transferState = transferState;\n        this.sanitizer = sanitizer;\n        this.platform_id = platform_id;\n        this.document = document;\n        this.slideIndex = 0;\n        this.slides = [];\n        this.initial = true;\n        this.isHidden = false;\n        this.imageUrls = [];\n        this.height = '100%';\n        this.showArrows = true;\n        this.disableSwiping = false;\n        this.autoPlay = false;\n        this.autoPlayInterval = 3333;\n        this.stopAutoPlayOnSlide = true;\n        this.autoPlayWaitForLazyLoad = false;\n        this.debug = false;\n        this.backgroundSize = 'cover';\n        this.backgroundPosition = 'center center';\n        this.backgroundRepeat = 'no-repeat';\n        this.showDots = false;\n        this.dotColor = '#FFF';\n        this.showCaptions = true;\n        this.captionColor = '#FFF';\n        this.captionBackground = 'rgba(0, 0, 0, .35)';\n        this.lazyLoad = false;\n        this.hideOnNoSlides = false;\n        this.onSlideLeft = new EventEmitter();\n        this.onSlideRight = new EventEmitter();\n        this.onSwipeLeft = new EventEmitter();\n        this.onSwipeRight = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    SlideshowComponent.prototype.ngDoCheck = function () {\n        if (this.debug === true)\n            console.log(\"ngOnChanges()\");\n        // if this is the first being called, create a copy of the input\n        if (!isNullOrUndefined(this.imageUrls) && this.imageUrls.length > 0) {\n            if (this.initial === true)\n                this.urlCache = Array.from(this.imageUrls);\n            if (this.isHidden === true) {\n                this.renderer.removeStyle(this.container.nativeElement, 'display');\n                this.isHidden = false;\n            }\n            this.setSlides();\n        }\n        else if (this.hideOnNoSlides === true) {\n            this.renderer.setStyle(this.container.nativeElement, 'display', 'none');\n            this.isHidden = true;\n        }\n        this.setStyles();\n        this.handleAutoPlay();\n    };\n    /**\n     * \\@description this is the function that should be called to make the slides change.\n     *              indexDirection to move back is -1, to move forward is 1, and to stay in place is 0.\n     *              0 is taken into account for failed swipes\n     * @param {?} indexDirection\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    SlideshowComponent.prototype.onSlide = function (indexDirection, isSwipe) {\n        if (this.debug === true)\n            console.log(\"onSlide(\" + indexDirection + \", \" + isSwipe + \")\");\n        this.handleAutoPlay(this.stopAutoPlayOnSlide);\n        this.slide(indexDirection, isSwipe);\n    };\n    /**\n     * \\@description Use the swipe service to detect swipe events from phone and tablets\n     * @param {?} e\n     * @param {?} when\n     * @return {?}\n     */\n    SlideshowComponent.prototype.onSwipe = function (e, when) {\n        if (this.disableSwiping === true)\n            return;\n        var /** @type {?} */ indexDirection = this.swipeService.swipe(e, when, this.debug === true);\n        // handle a failed swipe\n        if (indexDirection === 0)\n            return;\n        else\n            this.onSlide(indexDirection, true);\n    };\n    /**\n     * \\@description Redirect to current slide \"href\" if defined\n     * @param {?} e\n     * @return {?}\n     */\n    SlideshowComponent.prototype.onClick = function (e) {\n        e.preventDefault();\n        var /** @type {?} */ currentSlide = this.slides.length > 0 && this.slides[this.slideIndex];\n        if (currentSlide && !isNullOrUndefined(currentSlide.image.clickAction)) {\n            currentSlide.image.clickAction();\n        }\n        else if (currentSlide && !isNullOrUndefined(currentSlide.image.href)) {\n            this.document.location.href = currentSlide.image.href;\n        }\n    };\n    /**\n     * \\@description set the index to the desired index - 1 and simulate a right slide\n     * @param {?} index\n     * @return {?}\n     */\n    SlideshowComponent.prototype.goToSlide = function (index) {\n        if (this.debug === true)\n            console.log(\"goToSlide(\" + index + \")\");\n        var /** @type {?} */ beforeClickIndex = this.slideIndex;\n        this.slideIndex = index - 1;\n        this.setSlideIndex(1);\n        if (!this.slides[this.slideIndex].loaded)\n            this.loadRemainingSlides();\n        this.handleAutoPlay(this.stopAutoPlayOnSlide);\n        this.slideRight(beforeClickIndex);\n        this.slides[beforeClickIndex].selected = false;\n        this.slides[this.slideIndex].selected = true;\n    };\n    /**\n     * \\@description set the index to the desired index - 1 and simulate a right slide\n     * @param {?} index\n     * @return {?}\n     */\n    SlideshowComponent.prototype.getSlideStyle = function (index) {\n        if (this.debug === true)\n            console.log(\"getSlideStyle(\" + index + \")\");\n        var /** @type {?} */ slide = this.slides[index];\n        if (slide.loaded) {\n            return {\n                \"background-image\": 'url(' + slide.image.url + ')',\n                \"background-size\": slide.image.backgroundSize || this.backgroundSize,\n                \"background-position\": slide.image.backgroundPosition || this.backgroundPosition,\n                \"background-repeat\": slide.image.backgroundRepeat || this.backgroundRepeat\n            };\n        }\n        else {\n            // doesn't compile correctly if returning an empty object, sooooo.....\n            return {\n                \"background-image\": undefined,\n                \"background-size\": undefined,\n                \"background-position\": undefined,\n                \"background-repeat\": undefined\n            };\n        }\n    };\n    /**\n     * \\@description Set the new slide index, then make the transition happen.\n     * @param {?} indexDirection\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    SlideshowComponent.prototype.slide = function (indexDirection, isSwipe) {\n        if (this.debug === true)\n            console.log(\"slide(\" + indexDirection + \", \" + isSwipe + \")\");\n        var /** @type {?} */ oldIndex = this.slideIndex;\n        this.setSlideIndex(indexDirection);\n        if (!this.slides[this.slideIndex].loaded)\n            this.loadRemainingSlides();\n        if (indexDirection === 1)\n            this.slideRight(oldIndex, isSwipe);\n        else\n            this.slideLeft(oldIndex, isSwipe);\n        this.slides[oldIndex].selected = false;\n        this.slides[this.slideIndex].selected = true;\n    };\n    /**\n     * \\@description This is just treating the url array like a circular list.\n     * @param {?} indexDirection\n     * @return {?}\n     */\n    SlideshowComponent.prototype.setSlideIndex = function (indexDirection) {\n        if (this.debug === true)\n            console.log(\"setSlideIndex(\" + this.slideIndex + \")\");\n        this.slideIndex += indexDirection;\n        if (this.slideIndex < 0)\n            this.slideIndex = this.slides.length - 1;\n        if (this.slideIndex >= this.slides.length)\n            this.slideIndex = 0;\n    };\n    /**\n     * \\@description This function handles the variables to move the CSS classes around accordingly.\n     *              In order to correctly handle animations, the new slide as well as the slides to\n     *              the left and right are assigned classes.\n     * @param {?} oldIndex\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    SlideshowComponent.prototype.slideLeft = function (oldIndex, isSwipe) {\n        if (this.debug === true)\n            console.log(\"slideLeft(\" + oldIndex + \", \" + isSwipe + \")\");\n        if (isSwipe === true)\n            this.onSwipeLeft.emit(this.slideIndex);\n        else\n            this.onSlideLeft.emit(this.slideIndex);\n        this.slides[this.getLeftSideIndex(oldIndex)].leftSide = false;\n        this.slides[oldIndex].leftSide = true;\n        this.slides[oldIndex].action = 'slideOutLeft';\n        this.slides[this.slideIndex].rightSide = false;\n        this.slides[this.getRightSideIndex()].rightSide = true;\n        this.slides[this.slideIndex].action = 'slideInRight';\n    };\n    /**\n     * \\@description This function handles the variables to move the CSS classes around accordingly.\n     *              In order to correctly handle animations, the new slide as well as the slides to\n     *              the left and right are assigned classes.\n     * @param {?} oldIndex\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    SlideshowComponent.prototype.slideRight = function (oldIndex, isSwipe) {\n        if (this.debug === true)\n            console.log(\"slideRight(\" + oldIndex + \", \" + isSwipe + \")\");\n        if (isSwipe === true)\n            this.onSwipeRight.emit(this.slideIndex);\n        else\n            this.onSlideRight.emit(this.slideIndex);\n        this.slides[this.getRightSideIndex(oldIndex)].rightSide = false;\n        this.slides[oldIndex].rightSide = true;\n        this.slides[oldIndex].action = 'slideOutRight';\n        this.slides[this.slideIndex].leftSide = false;\n        this.slides[this.getLeftSideIndex()].leftSide = true;\n        this.slides[this.slideIndex].action = 'slideInLeft';\n    };\n    /**\n     * \\@description Check to make sure slide images have been set or haven't changed\n     * @return {?}\n     */\n    SlideshowComponent.prototype.setSlides = function () {\n        if (!isNullOrUndefined(this.imageUrls)) {\n            if (this.debug === true)\n                console.log(\"setSlides()\");\n            if (this.checkCache() || this.initial === true) {\n                if (this.debug === true) {\n                    console.log(\"this.checkCache() || this.initial === true\");\n                    console.log(\"this.initial: \" + this.initial);\n                    console.log(\"this.urlCache: \" + this.urlCache);\n                    console.log(\"this.imageUrls: \" + this.imageUrls);\n                }\n                this.initial = false;\n                this.urlCache = Array.from(this.imageUrls);\n                this.slides = [];\n                if (this.lazyLoad === true) {\n                    this.buildLazyLoadSlideArray();\n                }\n                else {\n                    this.buildSlideArray();\n                }\n            }\n        }\n    };\n    /**\n     * \\@description create the slides without background urls, which will be added in\n     *              for the \"lazy load,\" then load only the first slide\n     * @return {?}\n     */\n    SlideshowComponent.prototype.buildLazyLoadSlideArray = function () {\n        if (this.debug === true)\n            console.log(\"buildLazyLoadSlideArray()\");\n        for (var _i = 0, _a = this.imageUrls; _i < _a.length; _i++) {\n            var image = _a[_i];\n            this.slides.push({\n                image: (typeof image === 'string' ? { url: null } : { url: null, href: image.href || '' }),\n                action: '',\n                leftSide: false,\n                rightSide: false,\n                selected: false,\n                loaded: false\n            });\n        }\n        this.slides[this.slideIndex].selected = true;\n        this.loadFirstSlide();\n    };\n    /**\n     * \\@description create the slides with background urls all at once\n     * @return {?}\n     */\n    SlideshowComponent.prototype.buildSlideArray = function () {\n        if (this.debug === true)\n            console.log(\"buildSlideArray()\");\n        for (var _i = 0, _a = this.imageUrls; _i < _a.length; _i++) {\n            var image = _a[_i];\n            this.slides.push({\n                image: (typeof image === 'string' ? { url: image } : image),\n                action: '',\n                leftSide: false,\n                rightSide: false,\n                selected: false,\n                loaded: true\n            });\n        }\n        this.slides[this.slideIndex].selected = true;\n    };\n    /**\n     * \\@description load the first slide image if lazy loading\n     *              this takes server side and browser side into account\n     * @return {?}\n     */\n    SlideshowComponent.prototype.loadFirstSlide = function () {\n        var _this = this;\n        if (this.debug === true)\n            console.log(\"loadFirstSlide()\");\n        var /** @type {?} */ tmpIndex = this.slideIndex;\n        var /** @type {?} */ tmpImage = this.imageUrls[tmpIndex];\n        // if server side, we don't need to worry about the rest of the slides\n        if (isPlatformServer(this.platform_id)) {\n            this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n            this.slides[tmpIndex].loaded = true;\n            this.transferState.set(FIRST_SLIDE_KEY, this.slides[tmpIndex]);\n        }\n        else {\n            var /** @type {?} */ firstSlideFromTransferState = this.transferState.get(FIRST_SLIDE_KEY, /** @type {?} */ (null));\n            // if the first slide didn't finish loading on the server side, we need to load it\n            if (firstSlideFromTransferState === null) {\n                var /** @type {?} */ loadImage = new Image();\n                loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n                loadImage.addEventListener('load', function () {\n                    _this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n                    _this.slides[tmpIndex].loaded = true;\n                });\n            }\n            else {\n                this.slides[tmpIndex] = firstSlideFromTransferState;\n                this.transferState.remove(FIRST_SLIDE_KEY);\n            }\n        }\n    };\n    /**\n     * \\@description if lazy loading in browser, start loading remaining slides\n     * \\@todo: figure out how to not show the spinner if images are loading fast enough\n     * @return {?}\n     */\n    SlideshowComponent.prototype.loadRemainingSlides = function () {\n        var _this = this;\n        if (this.debug === true)\n            console.log(\"loadRemainingSlides()\");\n        var _loop_1 = function (i) {\n            if (!this_1.slides[i].loaded) {\n                new Promise(function (resolve) {\n                    var /** @type {?} */ tmpImage = _this.imageUrls[i];\n                    var /** @type {?} */ loadImage = new Image();\n                    loadImage.addEventListener('load', function () {\n                        _this.slides[i].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n                        _this.slides[i].loaded = true;\n                        resolve();\n                    });\n                    loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n                });\n            }\n        };\n        var this_1 = this;\n        for (var /** @type {?} */ i = 0; i < this.slides.length; i++) {\n            _loop_1(/** @type {?} */ i);\n        }\n    };\n    /**\n     * \\@description Start or stop autoPlay, don't do it at all server side\n     * @param {?=} stopAutoPlay\n     * @return {?}\n     */\n    SlideshowComponent.prototype.handleAutoPlay = function (stopAutoPlay) {\n        var _this = this;\n        if (isPlatformServer(this.platform_id))\n            return;\n        if (stopAutoPlay === true || this.autoPlay === false) {\n            if (this.debug === true)\n                console.log(\"stop autoPlay\");\n            if (!isNullOrUndefined(this.autoplayIntervalId))\n                clearInterval(this.autoplayIntervalId);\n        }\n        else if (isNullOrUndefined(this.autoplayIntervalId)) {\n            if (this.debug === true)\n                console.log(\"start autoPlay\");\n            this.autoplayIntervalId = setInterval(function () {\n                if (_this.debug === true)\n                    console.log(\"autoPlay slide event\");\n                if (!_this.autoPlayWaitForLazyLoad || (_this.autoPlayWaitForLazyLoad && _this.slides[_this.slideIndex].loaded))\n                    _this.slide(1);\n            }, this.autoPlayInterval);\n        }\n    };\n    /**\n     * \\@description Keep the styles up to date with the input\n     * @return {?}\n     */\n    SlideshowComponent.prototype.setStyles = function () {\n        if (this.debug === true)\n            console.log(\"setStyles()\");\n        if (!isNullOrUndefined(this.height))\n            this.renderer.setStyle(this.container.nativeElement, 'height', this.height);\n        if (!isNullOrUndefined(this.minHeight))\n            this.renderer.setStyle(this.container.nativeElement, 'min-height', this.minHeight);\n        if (!isNullOrUndefined(this.arrowSize)) {\n            this.renderer.setStyle(this.prevArrow.nativeElement, 'height', this.arrowSize);\n            this.renderer.setStyle(this.prevArrow.nativeElement, 'width', this.arrowSize);\n            this.renderer.setStyle(this.nextArrow.nativeElement, 'height', this.arrowSize);\n            this.renderer.setStyle(this.nextArrow.nativeElement, 'width', this.arrowSize);\n        }\n    };\n    /**\n     * \\@description compare image array to the cache, returns false if no changes\n     * @return {?}\n     */\n    SlideshowComponent.prototype.checkCache = function () {\n        var _this = this;\n        if (this.debug === true)\n            console.log(\"checkCache()\");\n        return !(this.urlCache.length === this.imageUrls.length && this.urlCache.every(function (cacheElement, i) { return cacheElement === _this.imageUrls[i]; }));\n    };\n    /**\n     * \\@description get the index for the slide to the left of the new slide\n     * @param {?=} i\n     * @return {?}\n     */\n    SlideshowComponent.prototype.getLeftSideIndex = function (i) {\n        if (isUndefined(i))\n            i = this.slideIndex;\n        if (--i < 0)\n            i = this.slides.length - 1;\n        return i;\n    };\n    /**\n     * \\@description get the index for the slide to the right of the new slide\n     * @param {?=} i\n     * @return {?}\n     */\n    SlideshowComponent.prototype.getRightSideIndex = function (i) {\n        if (isUndefined(i))\n            i = this.slideIndex;\n        if (++i >= this.slides.length)\n            i = 0;\n        return i;\n    };\n    return SlideshowComponent;\n}());\nSlideshowComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'slideshow',\n                template: \"\\n    <div #container\\n         (touchstart)=\\\"onSwipe($event, 'start')\\\"\\n         (touchend)=\\\"onSwipe($event, 'end')\\\"\\n         class=\\\"slideshow-container\\\">\\n      <!-- slides -->\\n      <a *ngFor=\\\"let slide of slides; let i = index\\\"\\n         class=\\\"slides\\\"\\n         href=\\\"{{slide?.image?.clickAction ? '#' : slide?.image?.href}}\\\"\\n         title=\\\"{{slide?.image?.title}}\\\"\\n         [ngStyle]=\\\"getSlideStyle(i)\\\"\\n         [class.selected]=\\\"slide?.selected\\\"\\n         [class.hide-slide]=\\\"!slide?.selected && !slide?.leftSide && !slide?.rightSide\\\"\\n         [class.left-side]=\\\"slide?.leftSide\\\"\\n         [class.right-side]=\\\"slide?.rightSide\\\"\\n         [class.slide-in-left]=\\\"slide?.action === 'slideInLeft'\\\"\\n         [class.slide-in-right]=\\\"slide?.action === 'slideInRight'\\\"\\n         [class.slide-out-left]=\\\"slide?.action === 'slideOutLeft'\\\"\\n         [class.slide-out-right]=\\\"slide?.action === 'slideOutRight'\\\"\\n         [class.link]=\\\"slide?.image?.clickAction || slide?.image?.href\\\"\\n         (click)=\\\"onClick($event)\\\">\\n        <div class=\\\"loader\\\"\\n             *ngIf=\\\"!slide?.loaded\\\"></div>\\n        <div *ngIf=\\\"showCaptions && slide?.image?.caption\\\"\\n             class=\\\"caption\\\"\\n             [ngStyle]=\\\"{\\n               'color': captionColor,\\n               'background-color': captionBackground\\n              }\\\"\\n             [innerHTML]=\\\"slide?.image?.caption\\\">\\n        </div>\\n      </a>\\n      <!-- left arrow -->\\n      <div [class.display-none]=\\\"!this.showArrows\\\"\\n           (click)=\\\"onSlide(-1)\\\"\\n           class=\\\"arrow-container prev\\\">\\n        <i #prevArrow\\n           title=\\\"Previous\\\"\\n           class=\\\"arrow prev\\\"></i>\\n      </div>\\n      <!-- right arrow -->\\n      <div [class.display-none]=\\\"!this.showArrows\\\"\\n           (click)=\\\"onSlide(1)\\\"\\n           class=\\\"arrow-container next\\\">\\n        <i #nextArrow\\n           title=\\\"Next\\\"\\n           class=\\\"arrow next\\\"></i>\\n      </div>\\n      <!-- dots -->\\n      <ul class=\\\"slick-dots\\\"\\n          *ngIf=\\\"showDots\\\">\\n        <li *ngFor=\\\"let slide of slides; let index = index\\\"\\n            (click)=\\\"goToSlide(index)\\\"\\n            [class.slick-active]=\\\"slide.selected\\\">\\n          <button type=\\\"button\\\"\\n                  [attr.style]=\\\"sanitizer.bypassSecurityTrustStyle('--dot-color:' + dotColor)\\\">\\n            {{index}}\\n          </button>\\n        </li>\\n      </ul>\\n    </div>\\n  \",\n                styles: [\"\\n    /*\\n     styles adapted from https://www.w3schools.com/w3css/4/w3.css\\n     arrow styles adapted from https://codepen.io/minustalent/pen/Frhaw\\n     */\\n    .display-none {\\n      display: none !important; }\\n\\n    .slideshow-container {\\n      position: relative;\\n      display: block;\\n      margin: auto;\\n      height: 100%;\\n      width: 100%;\\n      overflow: hidden; }\\n      .slideshow-container .hide-slide {\\n        visibility: hidden;\\n        position: absolute;\\n        top: -100vw;\\n        left: -100vw;\\n        opacity: 0; }\\n      .slideshow-container .slides {\\n        position: absolute;\\n        top: 0;\\n        height: 100%;\\n        width: 100%;\\n        visibility: visible;\\n        opacity: 1;\\n        display: block; }\\n        .slideshow-container .slides.selected {\\n          left: 0; }\\n        .slideshow-container .slides.left-slide {\\n          left: -100%; }\\n        .slideshow-container .slides.right-slide {\\n          left: 100%; }\\n        .slideshow-container .slides.slide-in-left {\\n          left: 0;\\n          -webkit-animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\\n                  animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\\n        .slideshow-container .slides.slide-in-right {\\n          left: 0;\\n          -webkit-animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\\n                  animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\\n        .slideshow-container .slides.slide-out-left {\\n          left: -100%;\\n          -webkit-animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\\n                  animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\\n        .slideshow-container .slides.slide-out-right {\\n          left: 100%;\\n          -webkit-animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\\n                  animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\\n        .slideshow-container .slides.link {\\n          cursor: pointer; }\\n        .slideshow-container .slides:not(.link) {\\n          cursor: default; }\\n      .slideshow-container .caption {\\n        position: absolute;\\n        bottom: 0;\\n        padding: 10px;\\n        width: 100%; }\\n      .slideshow-container .arrow-container {\\n        display: -webkit-box;\\n        display: -ms-flexbox;\\n        display: flex;\\n        -webkit-box-align: center;\\n            -ms-flex-align: center;\\n                align-items: center;\\n        -webkit-box-pack: center;\\n            -ms-flex-pack: center;\\n                justify-content: center;\\n        position: absolute;\\n        top: 0;\\n        height: 100%;\\n        width: auto;\\n        cursor: pointer;\\n        background-size: 100%;\\n        background-image: -webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent));\\n        background-image: linear-gradient(transparent, transparent);\\n        z-index: 100;\\n        -webkit-user-select: none;\\n           -moz-user-select: none;\\n            -ms-user-select: none;\\n                user-select: none; }\\n        .slideshow-container .arrow-container:before {\\n          display: block;\\n          height: 100%;\\n          position: absolute;\\n          top: 0;\\n          left: 0;\\n          opacity: 0;\\n          width: 100%;\\n          z-index: -100;\\n          -webkit-transition: opacity 0.45s;\\n          transition: opacity 0.45s; }\\n        .slideshow-container .arrow-container.prev {\\n          left: 0; }\\n          .slideshow-container .arrow-container.prev:before {\\n            background-image: -webkit-gradient(linear, right top, left top, from(transparent), to(rgba(0, 0, 0, 0.75)));\\n            background-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 0.75));\\n            content: ''; }\\n        .slideshow-container .arrow-container.next {\\n          right: 0; }\\n          .slideshow-container .arrow-container.next:before {\\n            background-image: -webkit-gradient(linear, left top, right top, from(transparent), to(rgba(0, 0, 0, 0.75)));\\n            background-image: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.75));\\n            content: ''; }\\n        .slideshow-container .arrow-container .arrow {\\n          display: block;\\n          margin: auto;\\n          width: 30px;\\n          height: 30px;\\n          background: transparent;\\n          border-top: 2px solid #f2f2f2;\\n          border-left: 2px solid #f2f2f2;\\n          -webkit-transition: all .3s ease-in-out;\\n          transition: all .3s ease-in-out;\\n          -webkit-user-select: none;\\n             -moz-user-select: none;\\n              -ms-user-select: none;\\n                  user-select: none; }\\n          .slideshow-container .arrow-container .arrow:before {\\n            display: block;\\n            height: 200%;\\n            width: 200%;\\n            margin-left: -50%;\\n            margin-top: -50%;\\n            content: \\\"\\\";\\n            -webkit-transform: rotate(45deg);\\n                    transform: rotate(45deg); }\\n          .slideshow-container .arrow-container .arrow.prev {\\n            -webkit-transform: rotate(-45deg);\\n                    transform: rotate(-45deg);\\n            position: relative;\\n            left: 20px;\\n            margin-right: 10px; }\\n          .slideshow-container .arrow-container .arrow.next {\\n            -webkit-transform: rotate(135deg);\\n                    transform: rotate(135deg);\\n            position: relative;\\n            right: 20px;\\n            margin-left: 10px; }\\n      .slideshow-container .slick-dots {\\n        display: block;\\n        bottom: 15px;\\n        z-index: 1;\\n        text-align: center;\\n        position: absolute;\\n        padding: 0;\\n        left: 0;\\n        right: 0;\\n        margin: 0 auto; }\\n        .slideshow-container .slick-dots li {\\n          display: inline;\\n          margin: 0;\\n          padding: 0; }\\n          .slideshow-container .slick-dots li button {\\n            border: none;\\n            background: none;\\n            text-indent: -9999px;\\n            font-size: 0;\\n            width: 20px;\\n            height: 20px;\\n            outline: none;\\n            position: relative;\\n            z-index: 1;\\n            cursor: pointer; }\\n            .slideshow-container .slick-dots li button:before {\\n              content: '';\\n              width: 4px;\\n              height: 4px;\\n              background: var(--dot-color, #FFF);\\n              border-radius: 4px;\\n              display: block;\\n              position: absolute;\\n              top: 50%;\\n              left: 50%;\\n              -webkit-transform: translate(-50%, -50%);\\n                      transform: translate(-50%, -50%);\\n              opacity: .7;\\n              -webkit-transition: all .5s ease-out;\\n              transition: all .5s ease-out; }\\n          .slideshow-container .slick-dots li.slick-active button:before {\\n            -webkit-transform: translate(-50%, -50%) scale(1.4);\\n                    transform: translate(-50%, -50%) scale(1.4);\\n            opacity: 1; }\\n\\n    @media screen and (min-width: 768px) {\\n      .slideshow-container .arrow-container:hover:before {\\n        opacity: 1; }\\n      .slideshow-container .arrow-container:hover .arrow {\\n        border-width: 4px; }\\n      .slideshow-container .arrow-container .arrow:hover {\\n        border-width: 4px; } }\\n\\n    @-webkit-keyframes slideInRight {\\n      0% {\\n        left: -100%; }\\n      100% {\\n        left: 0; } }\\n\\n    @keyframes slideInRight {\\n      0% {\\n        left: -100%; }\\n      100% {\\n        left: 0; } }\\n\\n    @-webkit-keyframes slideInLeft {\\n      0% {\\n        left: 100%; }\\n      100% {\\n        left: 0; } }\\n\\n    @keyframes slideInLeft {\\n      0% {\\n        left: 100%; }\\n      100% {\\n        left: 0; } }\\n\\n    @-webkit-keyframes slideOutRight {\\n      0% {\\n        left: 0; }\\n      100% {\\n        left: -100%; } }\\n\\n    @keyframes slideOutRight {\\n      0% {\\n        left: 0; }\\n      100% {\\n        left: -100%; } }\\n\\n    @-webkit-keyframes slideOutLeft {\\n      0% {\\n        left: 0; }\\n      100% {\\n        left: 100%; } }\\n\\n    @keyframes slideOutLeft {\\n      0% {\\n        left: 0; }\\n      100% {\\n        left: 100%; } }\\n\\n    .loader {\\n      position: absolute;\\n      left: 50%;\\n      margin-left: -20px;\\n      top: 50%;\\n      margin-top: -20px;\\n      border: 5px solid #f3f3f3;\\n      border-top: 5px solid #555;\\n      border-radius: 50%;\\n      width: 50px;\\n      height: 50px;\\n      -webkit-animation: spin 1s linear infinite;\\n              animation: spin 1s linear infinite; }\\n\\n    @-webkit-keyframes spin {\\n      0% {\\n        -webkit-transform: rotate(0deg);\\n                transform: rotate(0deg); }\\n      100% {\\n        -webkit-transform: rotate(360deg);\\n                transform: rotate(360deg); } }\\n\\n    @keyframes spin {\\n      0% {\\n        -webkit-transform: rotate(0deg);\\n                transform: rotate(0deg); }\\n      100% {\\n        -webkit-transform: rotate(360deg);\\n                transform: rotate(360deg); } }\\n  \"]\n            },] },\n];\n/**\n * @nocollapse\n */\nSlideshowComponent.ctorParameters = function () { return [\n    { type: SwipeService, },\n    { type: Renderer2, },\n    { type: TransferState, },\n    { type: DomSanitizer, },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\nSlideshowComponent.propDecorators = {\n    'imageUrls': [{ type: Input },],\n    'height': [{ type: Input },],\n    'minHeight': [{ type: Input },],\n    'arrowSize': [{ type: Input },],\n    'showArrows': [{ type: Input },],\n    'disableSwiping': [{ type: Input },],\n    'autoPlay': [{ type: Input },],\n    'autoPlayInterval': [{ type: Input },],\n    'stopAutoPlayOnSlide': [{ type: Input },],\n    'autoPlayWaitForLazyLoad': [{ type: Input },],\n    'debug': [{ type: Input },],\n    'backgroundSize': [{ type: Input },],\n    'backgroundPosition': [{ type: Input },],\n    'backgroundRepeat': [{ type: Input },],\n    'showDots': [{ type: Input },],\n    'dotColor': [{ type: Input },],\n    'showCaptions': [{ type: Input },],\n    'captionColor': [{ type: Input },],\n    'captionBackground': [{ type: Input },],\n    'lazyLoad': [{ type: Input },],\n    'hideOnNoSlides': [{ type: Input },],\n    'onSlideLeft': [{ type: Output, args: ['onSlideLeft',] },],\n    'onSlideRight': [{ type: Output, args: ['onSlideRight',] },],\n    'onSwipeLeft': [{ type: Output, args: ['onSwipeLeft',] },],\n    'onSwipeRight': [{ type: Output, args: ['onSwipeRight',] },],\n    'container': [{ type: ViewChild, args: ['container',] },],\n    'prevArrow': [{ type: ViewChild, args: ['prevArrow',] },],\n    'nextArrow': [{ type: ViewChild, args: ['nextArrow',] },],\n};\nvar SlideshowModule = /** @class */ (function () {\n    function SlideshowModule() {\n    }\n    return SlideshowModule;\n}());\nSlideshowModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    BrowserTransferStateModule\n                ],\n                declarations: [\n                    SlideshowComponent\n                ],\n                exports: [\n                    SlideshowComponent\n                ],\n                providers: [\n                    SwipeService\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nSlideshowModule.ctorParameters = function () { return []; };\n/**\n * Generated bundle index. Do not edit.\n */\nexport { SlideshowModule, SlideshowComponent as ɵa, SwipeService as ɵb };\n//# sourceMappingURL=ng-simple-slideshow.es5.js.map\n"]}]}