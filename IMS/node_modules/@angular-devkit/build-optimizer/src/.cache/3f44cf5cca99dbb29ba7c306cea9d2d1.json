{"remainingRequest":"/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/angular2-qrcode/lib/angular2-qrcode.js","dependencies":[{"path":"/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/angular2-qrcode/lib/angular2-qrcode.js","mtime":1492228300000},{"path":"/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/cache-loader/dist/cjs.js","mtime":1531987733690},{"path":"/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1531987729634}],"contextDependencies":[],"result":["import { Component, ElementRef, Input, NgModule } from '@angular/core';\nimport QRious from 'qrious';\nvar QRCodeComponent = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} elementRef\n     */\n    function QRCodeComponent(elementRef) {\n        this.elementRef = elementRef;\n        this.background = 'white';\n        this.backgroundAlpha = 1.0;\n        this.foreground = 'black';\n        this.foregroundAlpha = 1.0;\n        this.level = 'L';\n        this.mime = 'image/png';\n        this.padding = null;\n        this.size = 100;\n        this.value = '';\n        this.canvas = false;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    QRCodeComponent.prototype.ngOnChanges = function (changes) {\n        if ('background' in changes ||\n            'backgroundAlpha' in changes ||\n            'foreground' in changes ||\n            'foregroundAlpha' in changes ||\n            'level' in changes ||\n            'mime' in changes ||\n            'padding' in changes ||\n            'size' in changes ||\n            'value' in changes ||\n            'canvas' in changes) {\n            this.generate();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    QRCodeComponent.prototype.generate = function () {\n        try {\n            var /** @type {?} */ el = this.elementRef.nativeElement;\n            el.innerHTML = '';\n            var /** @type {?} */ qr = new QRious({\n                background: this.background,\n                backgroundAlpha: this.backgroundAlpha,\n                foreground: this.foreground,\n                foregroundAlpha: this.foregroundAlpha,\n                level: this.level,\n                mime: this.mime,\n                padding: this.padding,\n                size: this.size,\n                value: this.value\n            });\n            if (this.canvas) {\n                el.appendChild(qr.canvas);\n            }\n            else {\n                el.appendChild(qr.image);\n            }\n        }\n        catch (e) {\n            console.error(\"Could not generate QR Code: \" + e.message);\n        }\n    };\n    return QRCodeComponent;\n}());\nvar QRCodeModule = /*@__PURE__*/ (function () {\n    function QRCodeModule() {\n    }\n    return QRCodeModule;\n}());\n/**\n * Generated bundle index. Do not edit.\n */\nexport { QRCodeComponent, QRCodeModule };\n\n",{"version":3,"file":"/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/angular2-qrcode/lib/angular2-qrcode.js.post-build-optimizer.js","sourceRoot":"","sources":["/Users/nsp/Documents/GitHub/I_M_S/IMS/node_modules/angular2-qrcode/lib/angular2-qrcode.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,IAAI,eAAe,iBAAG,CAAC;IACnB;;OAEG;IACH,yBAAyB,UAAU;QAC/B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IACD;;;OAGG;IACH,eAAe,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,OAAO;QACrD,EAAE,CAAC,CAAC,YAAY,IAAI,OAAO;YACvB,iBAAiB,IAAI,OAAO;YAC5B,YAAY,IAAI,OAAO;YACvB,iBAAiB,IAAI,OAAO;YAC5B,OAAO,IAAI,OAAO;YAClB,MAAM,IAAI,OAAO;YACjB,SAAS,IAAI,OAAO;YACpB,MAAM,IAAI,OAAO;YACjB,OAAO,IAAI,OAAO;YAClB,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC;IACL,CAAC,CAAC;IACF;;OAEG;IACH,eAAe,CAAC,SAAS,CAAC,QAAQ,GAAG;QACjC,IAAI,CAAC;YACD,IAAI,gBAAgB,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;YACxD,EAAE,CAAC,SAAS,GAAG,EAAE,CAAC;YAClB,IAAI,gBAAgB,CAAC,EAAE,GAAG,IAAI,MAAM,CAAC;gBACjC,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,eAAe,EAAE,IAAI,CAAC,eAAe;gBACrC,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,eAAe,EAAE,IAAI,CAAC,eAAe;gBACrC,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,KAAK;aACpB,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACd,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;YAC9B,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;QACL,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACP,OAAO,CAAC,KAAK,CAAC,8BAA8B,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;QAC9D,CAAC;IACL,CAAC,CAAC;IACF,MAAM,CAAC,eAAe,CAAC;GACxB,CAAC,CAAC;AA0BL,IAAI,YAAY,iBAAG,CAAC;IAChB;IACA,CAAC;IACD,MAAM,CAAC,YAAY,CAAC;GACrB,CAAC,CAAC;AAYL;;GAEG;AAEH,OAAO,EAAE,eAAe,EAAE,YAAY,EAAE,CAAC","sourcesContent":["import { Component, ElementRef, Input, NgModule } from '@angular/core';\nimport QRious from 'qrious';\n\nvar QRCodeComponent = (function () {\n    /**\n     * @param {?} elementRef\n     */\n    function QRCodeComponent(elementRef) {\n        this.elementRef = elementRef;\n        this.background = 'white';\n        this.backgroundAlpha = 1.0;\n        this.foreground = 'black';\n        this.foregroundAlpha = 1.0;\n        this.level = 'L';\n        this.mime = 'image/png';\n        this.padding = null;\n        this.size = 100;\n        this.value = '';\n        this.canvas = false;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    QRCodeComponent.prototype.ngOnChanges = function (changes) {\n        if ('background' in changes ||\n            'backgroundAlpha' in changes ||\n            'foreground' in changes ||\n            'foregroundAlpha' in changes ||\n            'level' in changes ||\n            'mime' in changes ||\n            'padding' in changes ||\n            'size' in changes ||\n            'value' in changes ||\n            'canvas' in changes) {\n            this.generate();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    QRCodeComponent.prototype.generate = function () {\n        try {\n            var /** @type {?} */ el = this.elementRef.nativeElement;\n            el.innerHTML = '';\n            var /** @type {?} */ qr = new QRious({\n                background: this.background,\n                backgroundAlpha: this.backgroundAlpha,\n                foreground: this.foreground,\n                foregroundAlpha: this.foregroundAlpha,\n                level: this.level,\n                mime: this.mime,\n                padding: this.padding,\n                size: this.size,\n                value: this.value\n            });\n            if (this.canvas) {\n                el.appendChild(qr.canvas);\n            }\n            else {\n                el.appendChild(qr.image);\n            }\n        }\n        catch (e) {\n            console.error(\"Could not generate QR Code: \" + e.message);\n        }\n    };\n    return QRCodeComponent;\n}());\nQRCodeComponent.decorators = [\n    { type: Component, args: [{\n                moduleId: 'module.id',\n                selector: 'qr-code',\n                template: \"\"\n            },] },\n];\n/**\n * @nocollapse\n */\nQRCodeComponent.ctorParameters = function () { return [\n    { type: ElementRef, },\n]; };\nQRCodeComponent.propDecorators = {\n    'background': [{ type: Input },],\n    'backgroundAlpha': [{ type: Input },],\n    'foreground': [{ type: Input },],\n    'foregroundAlpha': [{ type: Input },],\n    'level': [{ type: Input },],\n    'mime': [{ type: Input },],\n    'padding': [{ type: Input },],\n    'size': [{ type: Input },],\n    'value': [{ type: Input },],\n    'canvas': [{ type: Input },],\n};\nvar QRCodeModule = (function () {\n    function QRCodeModule() {\n    }\n    return QRCodeModule;\n}());\nQRCodeModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [QRCodeComponent],\n                declarations: [QRCodeComponent]\n            },] },\n];\n/**\n * @nocollapse\n */\nQRCodeModule.ctorParameters = function () { return []; };\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QRCodeComponent, QRCodeModule };\n"]}]}